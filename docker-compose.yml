version: '3'

services:

  btm-db:
    image: 'pgvector/pgvector:pg16'
    container_name: ${BTM_DB_CONTAINER}
    restart: unless-stopped
    ports:
      - "${BTM_DB_HOST_PORT}:5432"
    networks:
      - db-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - postgres-backups:/var/lib/postgresql/backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    mem_limit: 512M
    mem_reservation: 256M
    cpus: 1.0
      
  btm-cache:
    image: 'redis:7.0.10-alpine'
    container_name: ${BTM_CACHE_CONTAINER}
    restart: unless-stopped
    ports:
      - "${BTM_CACHE_HOST_PORT}:6379"
    networks:
      - cache-network
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - redis-data:/data
      - type: tmpfs
        target: /tmp
    mem_limit: 256M
    mem_reservation: 128M
    cpus: 0.5
    
  e5-embeddings-service:
    image: 'e5-embedder:0.1.0'
    container_name: ${E5_SERVICE_CONTAINER}
    restart: unless-stopped 
    ports: 
      - "${E5_SERVICE_HOST_PORT}:8000"
    networks: 
      - db-network
    mem_limit: 1g
    mem_reservation: 512m
    cpus: 1.0
      
  btm-api:
    image: 'agrfesta/be-the-master:0.1.0'
    container_name: ${BTM_API_CONTAINER}
    mem_limit: 256M
    mem_reservation: 128M
    restart: unless-stopped
    ports:
      - "${BTM_API_HOST_PORT}:8080"
    networks:
      - db-network
      - cache-network
    depends_on:
      - btm-db
      - btm-cache
      - e5-embeddings-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${BTM_DB_CONTAINER}:5432/${POSTGRES_USER}
      - SPRING_DATASOURCE_PLATFORM=postgres
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_REDIS_HOST=${BTM_CACHE_CONTAINER}
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
      - PROVIDERS_OPENAI_BASEURL=https://api.openai.com/v1
      - PROVIDERS_OPENAI_APIKEY=${PROVIDERS_OPENAI_APIKEY}
      - PROVIDERS_E5_BASEURL=http://${E5_SERVICE_CONTAINER}:8000
      - EMBEDDINGS_PROVIDER=e5

networks:
  db-network:
  cache-network:
  
volumes:
  postgres-data:
  postgres-backups:
  redis-data:
 